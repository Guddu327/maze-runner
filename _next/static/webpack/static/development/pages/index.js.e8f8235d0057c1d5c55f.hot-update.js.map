{"version":3,"file":"static/webpack/static/development/pages/index.js.e8f8235d0057c1d5c55f.hot-update.js","sources":["webpack:///./algorithms/BFS.js"],"sourcesContent":["/* eslint-disable no-continue */\n/* eslint-disable indent */\nimport * as _ from 'lodash';\n\nfunction getNeighbors(currentNode, grid) {\n    const array = [];\n    const { row, col } = currentNode;\n    if (row > 0) array.push(grid[row - 1][col]);\n    if (col > 0) array.push(grid[row][col - 1]);\n    if (row < grid.length - 1) array.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) array.push(grid[row][col + 1]);\n    return _.filter(array, (node) => !node.isVisited && !node.isWall);\n}\n\nfunction BFS(grid, startNode, endNode) {\n    let queue = [];\n    const visitedNodes = [];\n    queue.push(startNode);\n    let i = 0;\n    while (queue.length) {\n        const currentNode = queue.shift();\n        currentNode.isVisited = true;\n\n        visitedNodes.push(currentNode);\n\n        if (currentNode === endNode) return visitedNodes;\n\n        const neighbors = getNeighbors(currentNode, grid);\n        console.log(queue);\n        queue = _.concat(queue, neighbors);\n        console.log('currentNode', currentNode);\n        console.log('QUEUE', queue, neighbors);\n        if (++i > 5) { console.log('OVERFLOEW BREAK'); break;}\n    }\n\n    return visitedNodes;\n}\n\nexport default BFS;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}