{"version":3,"file":"static/webpack/static/development/pages/index.js.4f5b17bf5b64ac9a0099.hot-update.js","sources":["webpack:///./algorithms/DFS.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport * as _ from 'lodash';\n\nfunction getNeighbors(currentNode, grid) {\n  const neighbors = [];\n  const { row, col } = currentNode;\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  return _.filter(neighbors, (neighbor) => !neighbor.isVisited && !neighbor.isWall);\n}\n\nfunction updateNeighbors(currentNode, neighbors) {\n  return _.map(neighbors, (neighbor) => {\n    neighbor.isVisited = true;\n    neighbor.previousNode = currentNode;\n    return neighbor;\n  });\n}\n\nfunction DFS(grid, startNode, endNode) {\n  let stack = [];\n  const visitedNodes = [];\n  stack.push(startNode);\n  while (stack.length) {\n    const currentNode = stack.pop();\n    currentNode.isVisited = true;\n    visitedNodes.push(currentNode);\n\n    if (currentNode === endNode) return visitedNodes;\n\n    const neighbors = getNeighbors(currentNode, grid);\n    const updatedNeighbors = updateNeighbors(currentNode, neighbors);\n    stack = _.concat(stack, updatedNeighbors);\n  }\n\n  return visitedNodes;\n}\n\nexport default DFS;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}